generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Test {
  id             String         @id @default(cuid()) @db.VarChar(50)
  title          String         @db.VarChar(255)
  description    String?
  category       String         @default("일반") @db.VarChar(100)
  thumbnailUrl   String?        @map("thumbnail_url") @db.VarChar(500)
  detailImageUrl String?        @map("detail_image_url") @db.VarChar(500)
  styleTheme     String         @default("modern") @map("style_theme") @db.VarChar(50)
  isActive       Boolean        @default(true) @map("is_active")
  createdAt      DateTime       @default(now()) @map("created_at")
  updatedAt      DateTime       @updatedAt @map("updated_at")
  questions      Json?          // 질문과 선택지를 JSONB로 저장
  resultTypes    Json?          @map("result_types") // 결과 타입들을 JSONB로 저장
  responses      UserResponse[]

  @@map("tests")
}

model Admin {
  id           String   @id @db.VarChar(50)
  username     String   @unique @db.VarChar(100)
  email        String   @unique @db.VarChar(255)
  passwordHash String   @map("password_hash") @db.VarChar(255)
  createdAt    DateTime @default(now()) @map("created_at")

  @@map("admins")
}


model UserResponse {
  id           String   @id @default(cuid()) @db.VarChar(50)
  testId       String   @map("test_id") @db.VarChar(50)
  responseData Json     @map("response_data")
  resultType   String?  @map("result_type") @db.VarChar(100)
  ipAddress    String?  @map("ip_address") @db.Inet
  userAgent    String?  @map("user_agent")
  sessionId    String?  @map("session_id") @db.VarChar(100)
  createdAt    DateTime @default(now()) @map("created_at")
  test         Test     @relation(fields: [testId], references: [id])

  @@index([testId])
  @@map("user_responses")
}
