// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Test {
  id           String   @id @default(cuid()) @db.VarChar(50)
  title        String   @db.VarChar(255)
  description  String?  @db.Text
  category     String   @default("일반") @db.VarChar(100)
  thumbnailUrl String?  @map("thumbnail_url") @db.VarChar(500)
  detailImageUrl String? @map("detail_image_url") @db.VarChar(500)
  styleTheme   String   @default("modern") @map("style_theme") @db.VarChar(50)
  isActive     Boolean  @default(true) @map("is_active")
  questions    Json?    // JSONB 배열로 질문과 선택지를 함께 저장
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  resultTypes ResultType[]
  responses UserResponse[]

  @@map("tests")
}

model Admin {
  id           String   @id @db.VarChar(50)
  username     String   @unique @db.VarChar(100)
  email        String   @unique @db.VarChar(255)
  passwordHash String   @map("password_hash") @db.VarChar(255)
  createdAt    DateTime @default(now()) @map("created_at")

  @@map("admins")
}


model ResultType {
  id          String   @id @default(uuid()) @db.VarChar(50)
  testId      String   @map("test_id") @db.VarChar(50)
  type        String   @db.VarChar(100) // 결과 타입 (예: A, B, C 또는 high, medium, low)
  title       String   @db.VarChar(255)
  description String   @db.Text
  imageUrl    String?  @map("image_url") @db.VarChar(500)
  minScore    Int?     @map("min_score") // 최소 점수
  maxScore    Int?     @map("max_score") // 최대 점수
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  test Test @relation(fields: [testId], references: [id], onDelete: Cascade)

  @@map("result_types")
  @@index([testId, type])
}

model UserResponse {
  id           String   @id @default(cuid()) @db.VarChar(50)
  testId       String   @map("test_id") @db.VarChar(50)
  responseData Json     @map("response_data") // 모든 답변과 메타데이터를 포함하는 JSONB
  resultType   String?  @map("result_type") @db.VarChar(100) // 최종 결과 타입
  ipAddress    String?  @map("ip_address") @db.Inet
  userAgent    String?  @map("user_agent") @db.Text
  sessionId    String?  @map("session_id") @db.VarChar(100) // 브라우저 세션 추적용
  createdAt    DateTime @default(now()) @map("created_at")

  test Test @relation(fields: [testId], references: [id])

  @@map("user_responses")
  @@index([testId])
}

